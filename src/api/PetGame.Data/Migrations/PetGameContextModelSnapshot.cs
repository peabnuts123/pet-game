// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetGame.Data;

namespace PetGame.Data.Migrations
{
    [DbContext(typeof(PetGameContext))]
    partial class PetGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PetGame.Data.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf06df8d-276f-40d2-975a-f57f2042d8c2"),
                            Name = "Bappy Flirb"
                        });
                });

            modelBuilder.Entity("PetGame.Data.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e21e615-b04e-4213-9d4d-e35e981b9194"),
                            Name = "Crud"
                        },
                        new
                        {
                            Id = new Guid("0b5aab7c-3420-4672-9a51-d8f9f8a7b97e"),
                            Name = "Coiled Rope"
                        },
                        new
                        {
                            Id = new Guid("fea41875-c84c-4f60-b490-8b4cd2f648e0"),
                            Name = "Ripe Orange"
                        },
                        new
                        {
                            Id = new Guid("dab554ee-50e6-417d-b760-2eca12bcae79"),
                            Name = "Tacking Nails"
                        },
                        new
                        {
                            Id = new Guid("beccb327-2703-4b19-8b67-bb77b63a7c0c"),
                            Name = "Elastic Band"
                        },
                        new
                        {
                            Id = new Guid("55959d76-a087-4c60-aea7-619f7c077c6f"),
                            Name = "Elegant Flask"
                        },
                        new
                        {
                            Id = new Guid("f0147ee7-6fd2-409b-97bb-4796ca3ea099"),
                            Name = "Gold Ring"
                        },
                        new
                        {
                            Id = new Guid("2ef5a467-84f1-4dbb-b353-7c14c67f0c80"),
                            Name = "WORLDS BEST DAD Mug"
                        },
                        new
                        {
                            Id = new Guid("0504bcea-ad14-4bd4-9263-309fadda52a6"),
                            Name = "Left-hand Glove"
                        },
                        new
                        {
                            Id = new Guid("9a270da3-bcdd-46f5-9c29-af29b34cfac2"),
                            Name = "Right-hand Glove"
                        });
                });

            modelBuilder.Entity("PetGame.Data.LeaderboardEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EntryTimeUTC")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("LeaderboardEntries");
                });

            modelBuilder.Entity("PetGame.Data.PlayerInventoryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerInventoryItems");
                });

            modelBuilder.Entity("PetGame.Data.TakingTreeInventoryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DonatedById")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DonatedById");

                    b.HasIndex("ItemId");

                    b.ToTable("TakingTreeInventoryItems");
                });

            modelBuilder.Entity("PetGame.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("character varying(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("AuthId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetGame.Data.LeaderboardEntry", b =>
                {
                    b.HasOne("PetGame.Data.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetGame.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetGame.Data.PlayerInventoryItem", b =>
                {
                    b.HasOne("PetGame.Data.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetGame.Data.User", "User")
                        .WithMany("Inventory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetGame.Data.TakingTreeInventoryItem", b =>
                {
                    b.HasOne("PetGame.Data.User", "DonatedBy")
                        .WithMany()
                        .HasForeignKey("DonatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetGame.Data.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
